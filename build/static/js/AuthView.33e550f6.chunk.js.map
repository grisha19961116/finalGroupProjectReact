{"version":3,"sources":["components/AuthForm/AuthForm.module.css","components/Modal/Modal.module.css","views/AuthView/AuthView.module.css","assets/icons/google-logo.png","components/Modal/Modal.js","components/AuthForm/AuthForm.js","views/AuthView/AuthView.js"],"names":["module","exports","document","querySelector","AuthForm","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","target","name","value","reset","className","s","forma","para","btnWrapper","href","gBtn","type","gLogo","src","gIcon","alt","secondPara","innerForm","input","placeholder","onChange","required","btnWrapperBottom","regBtn","onClick","event","preventDefault","authOperations","logIn","data-auth","register","AuthView","wrapper","innerWrapper","header"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,KAAO,uBAAuB,WAAa,6BAA6B,KAAO,uBAAuB,WAAa,6BAA6B,iBAAmB,mCAAmC,MAAQ,wBAAwB,MAAQ,wBAAwB,OAAS,yBAAyB,UAAY,8B,oBCAtWD,EAAOC,QAAU,CAAC,gBAAkB,+BAA+B,eAAiB,gC,oBCApFD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,aAAe,+BAA+B,OAAS,yBAAyB,KAAO,yB,oJCD9H,MAA0B,wC,aCIvBC,SAASC,cAAc,e,OCK1B,SAASC,IAAY,IAAD,EACPC,mBAAS,IADF,mBAC1BC,EAD0B,KACnBC,EADmB,OAEDF,mBAAS,IAFR,mBAE1BG,EAF0B,KAEhBC,EAFgB,KAG3BC,EAAWC,cAWXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOP,EAASQ,GAClB,IAAK,WACH,OAAON,EAAYM,GACrB,QACE,SAGAC,EAAQ,WACZT,EAAS,IACTE,EAAY,KAgBd,OACE,sBAAKQ,UAAWC,IAAEC,MAAlB,UACE,mBAAGF,UAAWC,IAAEE,KAAhB,iOAGA,sBAAKH,UAAWC,IAAEG,WAAlB,UACE,mBAAGC,KAAK,6DAAR,SACE,wBAAQL,UAAWC,IAAEK,KAAMC,KAAK,SAAhC,sBAIF,qBAAKP,UAAWC,IAAEO,MAAOC,IAAKC,EAAOC,IAAK,aAE5C,mBAAGX,UAAWC,IAAEW,WAAhB,4DAGA,uBAAMZ,UAAWC,IAAEY,UAAnB,UACE,gCACE,uBACEb,UAAWC,IAAEa,MACbjB,KAAK,QACLU,KAAK,QACLQ,YAAY,QACZC,SAAUrB,EACVsB,UAAQ,EACRnB,MAAOT,MAGX,gCACE,uBACEW,UAAWC,IAAEa,MACbP,KAAK,OACLV,KAAK,WACLkB,YAAY,WACZC,SAAUrB,EACVsB,UAAQ,EACRnB,MAAOP,MAGX,sBAAKS,UAAWC,IAAEiB,iBAAlB,UACE,wBAAQlB,UAAWC,IAAEkB,OAAQC,QAtDhB,SAAAC,GACnBA,EAAMC,iBACN7B,EAAS8B,IAAeC,MAAM,CAAEnC,QAAOE,cACvCQ,KAmDM,qBAGA,wBAAQ0B,YAAU,MAAMzB,UAAWC,IAAEkB,OAAQC,QApDhC,SAAAC,GACnBA,EAAMC,iBACN7B,EAAS8B,IAAeG,SAAS,CAAErC,QAAOE,cAC1CQ,KAiDM,8B,sBCzEK4B,EAjBE,WACf,OACE,sBAAK3B,UAAWC,IAAE2B,QAAlB,UACE,sBAAK5B,UAAWC,IAAE4B,aAAlB,UACE,oBAAI7B,UAAWC,IAAE6B,OAAjB,sBACA,oBAAG9B,UAAWC,IAAEE,KAAhB,UACE,qCADF,iIAEyE,IACvE,+CAHF,4DAIgB,2CAGlB,cAAChB,EAAD","file":"static/js/AuthView.33e550f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"forma\":\"AuthForm_forma__1wZjb\",\"para\":\"AuthForm_para__2TbQh\",\"secondPara\":\"AuthForm_secondPara__1HXCW\",\"gBtn\":\"AuthForm_gBtn__U2r2B\",\"btnWrapper\":\"AuthForm_btnWrapper__3G2Fr\",\"btnWrapperBottom\":\"AuthForm_btnWrapperBottom__9LTqa\",\"gLogo\":\"AuthForm_gLogo__2p7mL\",\"input\":\"AuthForm_input__25_rD\",\"regBtn\":\"AuthForm_regBtn__3IY_s\",\"innerForm\":\"AuthForm_innerForm__3_B_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"Modal_Modal__backdrop__2CeWk\",\"Modal__content\":\"Modal_Modal__content__1bq3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AuthView_wrapper__3VBDi\",\"innerWrapper\":\"AuthView_innerWrapper__5c4rf\",\"header\":\"AuthView_header__ynK-y\",\"para\":\"AuthView_para__3PPjV\"};","export default __webpack_public_path__ + \"static/media/google-logo.4088374a.png\";","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Modal__backdrop} onClick={handleBackdropClick}>\n      <div className={s.Modal__content}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n","import { useState, useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport { loginGoogle } from '../../data/apiQueries';\nimport s from './AuthForm.module.css';\nimport gIcon from '../../assets/icons/google-logo.png';\nimport Modal from '../Modal';\nimport { authSelectors } from '../../redux/auth';\nimport { getActiveElement } from 'formik';\nexport default function AuthForm() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  // const [showModal, setShowModal] = useState(false);\n  // const userEmail = useSelector(state => state);\n  // const userCode = useSelector(authSelectors.getCode);\n  // const formatUserEmail = 'https://' + userEmail;\n  // const toggleModal = useCallback(() => {\n  //   setShowModal(prevShowModal => !prevShowModal);\n  // }, []);\n  // useEffect(() => {\n  //   toggleModal();\n  // }, [toggleModal, userCode]);\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n  const handleSignIn = event => {\n    event.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    reset();\n  };\n  const handleSignUp = event => {\n    event.preventDefault();\n    dispatch(authOperations.register({ email, password }));\n    reset();\n  };\n  const handleSignInGoogle = event => {\n    const data = loginGoogle();\n    console.log(data);\n  };\n  return (\n    <div className={s.forma}>\n      <p className={s.para}>\n        Для авторизации можете использовать Google Account:\n      </p>\n      <div className={s.btnWrapper}>\n        <a href=\"https://final-group-project-node.herokuapp.com/auth/google\">\n          <button className={s.gBtn} type=\"submit\">\n            Google\n          </button>\n        </a>\n        <img className={s.gLogo} src={gIcon} alt={'gIcon'} />\n      </div>\n      <p className={s.secondPara}>\n        Or login to our app using e-mail and password:\n      </p>\n      <form className={s.innerForm}>\n        <label>\n          <input\n            className={s.input}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={handleChange}\n            required\n            value={email}\n          />\n        </label>\n        <label>\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"password\"\n            placeholder=\"Password\"\n            onChange={handleChange}\n            required\n            value={password}\n          />\n        </label>\n        <div className={s.btnWrapperBottom}>\n          <button className={s.regBtn} onClick={handleSignIn}>\n            Sign In\n          </button>\n          <button data-auth=\"reg\" className={s.regBtn} onClick={handleSignUp}>\n            Sign Up\n          </button>\n        </div>\n      </form>\n      {/* {userCode === 201 && (\n        <Modal onClose={toggleModal}>\n          <p>\n            confirm registration on your{' '}\n            <a href={formatUserEmail}>{userEmail}</a>\n          </p>\n        </Modal>\n      )} */}\n    </div>\n  );\n}\n","import AuthForm from '../../components/AuthForm';\n// import Modal from '../../components/Modal';\nimport s from './AuthView.module.css';\n\nconst AuthView = () => {\n  return (\n    <div className={s.wrapper}>\n      <div className={s.innerWrapper}>\n        <h1 className={s.header}>Pro Test</h1>\n        <p className={s.para}>\n          <span>[</span> We will help you find weak points in knowledge so that\n          you can strengthen it. We will show you what is relevant to know for a{' '}\n          <span>QA Engineer</span> and will try to make the learning process\n          more diverse_ <span>]</span>\n        </p>\n      </div>\n      <AuthForm />\n    </div>\n  );\n};\n\nexport default AuthView;\n"],"sourceRoot":""}